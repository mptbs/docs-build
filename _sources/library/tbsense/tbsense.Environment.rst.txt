.. currentmodule:: tbsense
.. _tbsense.environment:

Environment -- Access to environmental sensors
==============================================

The Thunderboard Sense has 5 environmental sensors:

   - A pressure sensor
   - A humidity sensor with a thermometer
   - A UV/ambient light sensor
   - A microphone
   - An indoor air quality sensor

Ambient light
-------------

The ambient light sensor can measure light levels up to 128 kilolux (klx).
Inside an average office the light level is between 320 to 500 lx, while in full
daylight it can be between 12-100 klx.

The measurement relies on the angle of the sensor relative to the light source,
so a reading with the sensor pointing directly at the sun is much higher than if
angling the sensor a bit away from the sun.

More information, as well as a table of normal measurements can be found at
`Wikipedia <https://en.wikipedia.org/wiki/Lux>`_.

Example::

   import tbsense

   tbsense.Environment.start()
   amb_light = tbsense.Environment.ambient_light()
   print("The ambient light is ", amb_light, " lx.")
   tbsense.Environment.stop()

Pressure
--------

The pressure is measured in  millibars (mbar). The millibar is an SI derived
unit commonly used in metrology. 1 mbar is equivalent to 100 Pascal.

The standard sea level pressure is defined as 1013.25 mbar. The sensor can
measure a pressure in the range from 300 mbar to 1100 mbar, which is
equivalent to 9000 m above to 500 below sea level. The pressure measurement
has an accuracy of ±0.12 mbar (±1.1 m).

Example::

   import tbsense
   
   tbsense.Environment.start()
   pressure = tbsense.Environment.pressure()
   print("The current pressure is ", pressure, " mbar.")
   tbsense.Environment.stop()

Relative Humidity
-----------------

Relative humidity is a measurement of how much water is in the air compared to
how much water the air can hold at the current temperature. The warmer it is,
the more water can be absorbed by the ai

The warmer it is, the more water can be absorbed by the air. Relative humidity
is a measurement of how much water is in the air compared to how much water the
air can hold at the current temperature. 

Relative humidity is measured in percent. A relative humidity higher than 100%
will cause dew or mist to form. The sensor on the Thunderboard Sense can measure
the relative humidity in a range between 0% to 80% with an accuracy of ±3%.

Example::

   import tbsense

   tbsense.Environment.start()
   rh = tbsense.Environment.relative_humidity()
   print("The relative humidity is ", rh, "%.")
   tbsense.Environment.stop()

Sound Level
-----------

The sound level is measure through a small microphone on the Thunderboard Sense.
Example::
   
   import tbsense

   tbsense.Environment.start()
   sound_level = tbsense.Environment.sound_level()
   print("Current sound level: ", sound_level, "dB.")
   tbsense.Environment.stop()


Temperature
-----------

The temperature is measured in degrees Celcius. The temperature sensor is
integrated in the relative humidity sensor on the Thunderboard Sense. It can
measure temperatures in a range from -10°C to 85°C with an accuracy of ±0.4C.

Example::

   import tbsense

   tbsense.Environment.start()
   temp = tbsense.Environment.temperature()
   print("The current temperature is ", temp, " degrees Celcius.")
   tbsense.Environment.stop()

A measurement in Celcius might not be suitable for everyone. In order to convert
this measurement to Fahrenheit the following code snipped might be used.

Fahrenheit conversion::

   import tbsense

   def C_to_F( c ):
      f = ( c * 1.8 ) + 32
      return f

   tbsense.Environment.start()
   temp = C_to_F( tbsense.Environment.temperature() )
   print("The current temperature is ", temp, " degrees Fahrenheit.")
   tbsense.Environment.stop()

UV Index
--------

The UV Index is a measurement of sunburn-producing UV radiation. The sensor can
measure a UV Index in the range from 0 to 20. The UV Index can be interpreted as
follows:

======== ========== ============================
UV Index Risk       Time before potential injury
-------- ---------- ----------------------------
0-3      Low        1 day
3-6      Moderate   1-2 hours
6-8      High       0.5-1 hour
8-11     Very High  15-30 minutes
11+      Extreme    5-15 minutes
======== ========== ============================

Example::

    import tbsense

    tbsense.Environment.start()
    uv_index = tbsense.Environment.uv_index()
    if ( uv_index >= 6 )
        print("Consider applying sunscreen! Current UV Index of ", uv_index,".")
    else
        print("Have a nice day! Current UV Index of ", uv_index, ".")
    tbsense.Environment.stop()

Volatile Organic Compounds
--------------------------

The amount of volatile organic compounds (VOC) in the air is an important measure of
indoor air quality. A volatile organic compound is an organic chemical that
easily evaporates, such as formaldehyde or alcohol. Usual sources of VOC is
paint, cleaning supplies and office equipment. The level of VOC is usually many
times greater indoor than outdoors. A high level of VOC can cause symptoms of
illness.

The sensor is able to measure the total volatile organic compounf level between
0 and 1187 parts per billion (ppb). A lower value is generally better than a
high value. A value between 50 and 325 ppb is usually considered acceptable
indoors. In general the measurement should never increase above 500 ppb.

Example::

   import tbsense

   tbsense.Environment.start()
   tvoc = tbsense.Environment.voc()
   print("Total volatile organic compounds: ", tvoc, " ppb.")
   tbsense.Environment.stop()

Setup functions
---------------

.. function:: tbsense.Environment.start()

   Starts the environmental sensors. This function has to be called first in
   order to perform measurements.

.. function:: tbsense.Environment.stop()

   Stop the environmental sensors. Use this function if you no longer need to
   use the sensors for a while and want to save some power.

Measurement functions
---------------------

.. function:: tbsense.Environment.ambient_light()

   Get a measurement of the ambient light level. The result is returned in
   Lux.

.. function:: tbsense.Environment.pressure()

   Get a measurement from the pressure sensor. The result is returned in
   millibars.

.. function:: tbsense.Environment.relative_humidity()

   Get a measurement of the relative humidity in percent. 

.. function:: tbsense.Environment.sound_level()

   Get a measurement of the sound level in decibel.

.. function:: tbsense.Environment.temperature()

   Get a measurement of the temperature in degrees Celcius. 

.. function:: tbsense.Environment.uv_index()

   Get a a measurement of the UV Index. The returned value can be between 0 and
   20.

.. function:: tbsense.Environment.voc()

   Get a measurement of the total volatile organic compounds in the air. The
   measurement is given in parts per billion (ppb). 
